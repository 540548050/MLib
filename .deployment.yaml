apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: $CI_KUBE_NAME
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_KUBE_APP
    name: $CI_KUBE_NAME
    tier: frontend
    version: '$CI_PIPELINE_ID-$CI_JOB_ID'
spec:
  replicas: $CI_KUBE_REPLICAS
  template:
    metadata:
      labels:
        app: $CI_KUBE_APP
        name: $CI_KUBE_NAME
        tier: frontend
        version: '$CI_PIPELINE_ID-$CI_JOB_ID'
    spec:
      containers:
        - name: app
          image: $CI_KUBE_IMAGE
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 80
      imagePullSecrets:
        - name: harbor
---
apiVersion: v1
kind: Service
metadata:
  name: $CI_KUBE_NAME
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_KUBE_APP
    name: $CI_KUBE_NAME
    tier: frontend
    version: '$CI_PIPELINE_ID-$CI_JOB_ID'
spec:
  ports:
    - name: web
      port: 80
      targetPort: web
  selector:
    app: $CI_KUBE_APP
    name: $CI_KUBE_NAME
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $CI_KUBE_NAME
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_KUBE_APP
    name: $CI_KUBE_NAME
    tier: frontend
    version: '$CI_PIPELINE_ID-$CI_JOB_ID'
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # kubernetes.io/tls-acme: 'true'
    # kubernetes.io/ingress.class: "nginx"
spec:
  # tls:
  #   - hosts:
  #       - $CI_KUBE_HOSTNAME
  #     secretName: ${CI_ENVIRONMENT_SLUG}-tls
  rules:
    - host: $CI_KUBE_HOSTNAME
      http:
        paths:
          - path: /
            backend:
              serviceName: $CI_KUBE_NAME
              servicePort: 80
          - path: /api
            backend:
              serviceName: ${CI_KUBE_NAME}-backend
              servicePort: 80
---
### backend proxy_pass ###
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${CI_KUBE_NAME}-backend
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_KUBE_APP
    name: ${CI_KUBE_NAME}-backend
    tier: backend
    version: '$CI_PIPELINE_ID-$CI_JOB_ID'
spec:
  replicas: $CI_KUBE_REPLICAS
  template:
    metadata:
      labels:
        app: $CI_KUBE_APP
        name: ${CI_KUBE_NAME}-backend
        tier: backend
        version: '$CI_PIPELINE_ID-$CI_JOB_ID'
    spec:
      containers:
        - name: nginx-proxy-pass
          image: modules/nginx-proxy-pass
          ports:
            - name: web
              containerPort: 80
          env:
            - name: NGINX_UPSTREAM_SERVER
              value: '${CI_KUBE_BACKEND}'
            - name: NGINX_SERVER_PORT
              value: '80'
---
apiVersion: v1
kind: Service
metadata:
  name: ${CI_KUBE_NAME}-backend
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_KUBE_APP
    name: ${CI_KUBE_NAME}-backend
    tier: backend
    version: '$CI_PIPELINE_ID-$CI_JOB_ID'
spec:
  ports:
    - name: web
      port: 80
      targetPort: web
  selector:
    app: $CI_KUBE_APP
    name: ${CI_KUBE_NAME}-backend
---

